<Activity mc:Ignorable="sap sap2010" x:Class="test_Excelファイルから繰り返し取得" this:test_Excelファイルから繰り返し取得.in_WorkFilePathName="事前設定\勤務情報&amp;実績_test_ochiai.xlsx" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_WorkFilePathName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>758.6666666666666,2726</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>test_Excelファイルから繰り返し取得_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Excelファイルから各セルを取得できるか確認します&#xA;確認後削除予定&#xA;&#xA;作成者：落合" DisplayName="test_Excelファイルから繰り返し取得" sap:VirtualizedContainerService.HintSize="768.6666666666666,2661.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="EndTime" />
      <Variable x:TypeArguments="x:String" Name="StartTime" />
      <Variable x:TypeArguments="x:Int32" Name="scheduleNum" />
      <Variable x:TypeArguments="x:Int32" Name="itemNum" />
      <Variable x:TypeArguments="x:String" Name="ProjectName" />
      <Variable x:TypeArguments="x:String" Name="Category" />
      <Variable x:TypeArguments="x:String" Name="WorkName" />
      <Variable x:TypeArguments="x:String" Name="DateName" />
      <Variable x:TypeArguments="sd:DataTable" Name="DataTableWorkList" />
      <Variable x:TypeArguments="sd:DataTable" Name="DataTableDateList" />
      <Variable x:TypeArguments="sd:DataTable" Name="DataTableWorkInfo" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ueab:SequenceX DisplayName="単一の Excel プロセス スコープ" sap:VirtualizedContainerService.HintSize="706.6666666666666,2474.6666666666665" sap2010:WorkflowViewState.IdRef="SequenceX_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" sap2010:Annotation.AnnotationText="現在は仮に「勤務情報＆勤務実績ファイル」を対象とする&#xA;勤務実績シートのフォーマットが完成させたら追加する" AutoSave="False" CreateNewFile="False" DisplayName="Excel ファイルを使用" sap:VirtualizedContainerService.HintSize="644.6666666666666,2180.6666666666665" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[in_WorkFilePathName]">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="610.6666666666666,1862.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_41">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CommentOut DisplayName="コメント アウト" sap:VirtualizedContainerService.HintSize="548.6666666666666,53.333333333333336" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="無視されるアクティビティ" sap:VirtualizedContainerService.HintSize="450,193.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_50">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ueab:ExcelForEachRowX DisplayName="繰り返し (Excel の各行)" EmptyRowBehavior="Stop" HasHeaders="False" sap:VirtualizedContainerService.HintSize="388,82.66666666666667" sap2010:WorkflowViewState.IdRef="ExcelForEachRowX_1" Range="[Excel.Sheet(&quot;勤務情報&quot;).Range(&quot;B7:B37&quot;)]" SaveAfterEachRow="False">
                      <ueab:ExcelForEachRowX.Body>
                        <ActivityAction x:TypeArguments="ue:CurrentRowQuickHandle, x:Int32">
                          <ActivityAction.Argument1>
                            <DelegateInArgument x:TypeArguments="ue:CurrentRowQuickHandle" Name="CurrentRow" />
                          </ActivityAction.Argument1>
                          <ActivityAction.Argument2>
                            <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                          </ActivityAction.Argument2>
                          <Sequence DisplayName="実行" sap:VirtualizedContainerService.HintSize="636,2039.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_40">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence sap2010:Annotation.AnnotationText="→件名がない時はその日をスキップし、エラー内容を保持&#xA;&#xA;変数&#xA;scheduleNum：入力する場所の変数&#xA;itemNum：繰返しを数える変数" DisplayName="③「勤務実績」シートから出勤時刻、終了時刻、件名、カテゴリー、プロジェクト名を取得する" sap:VirtualizedContainerService.HintSize="574,1990" sap2010:WorkflowViewState.IdRef="Sequence_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence sap2010:Annotation.AnnotationText="各日ごとセルを動かすようにすること&#xA;先に開始時間があるか判定する&#xA;日付を保持する変数を追加する&#xA;&#xA;DateName：日付&#xA;WorkName：件名&#xA;Category：カテゴリー&#xA;ProjectName：プロジェクト名&#xA;StartTime：開始時間&#xA;EndTime：終了時間" DisplayName="勤務実績ファイルから読み取る" sap:VirtualizedContainerService.HintSize="512,1787.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;勤務情報&quot;).Cell(&quot;B7&quot;)]" DisplayName="セルの値を読み込み" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="450,161.33333333333334" sap2010:WorkflowViewState.IdRef="ReadCellValueX_6">
                                  <ueab:ReadCellValueX.SaveTo>
                                    <OutArgument x:TypeArguments="x:String">[DateName]</OutArgument>
                                  </ueab:ReadCellValueX.SaveTo>
                                </ueab:ReadCellValueX>
                                <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;勤務情報&quot;).Cell(&quot;C7:D7&quot;)]" DisplayName="WorkName(件名)を取得" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="450,161.33333333333334" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                                  <ueab:ReadCellValueX.SaveTo>
                                    <OutArgument x:TypeArguments="x:String">[WorkName]</OutArgument>
                                  </ueab:ReadCellValueX.SaveTo>
                                </ueab:ReadCellValueX>
                                <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;勤務情報&quot;).Cell(&quot;E7&quot;)]" DisplayName="Category(カテゴリー)を取得" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="450,161.33333333333334" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                                  <ueab:ReadCellValueX.SaveTo>
                                    <OutArgument x:TypeArguments="x:String">[Category]</OutArgument>
                                  </ueab:ReadCellValueX.SaveTo>
                                </ueab:ReadCellValueX>
                                <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;勤務情報&quot;).Cell(&quot;F7&quot;)]" DisplayName="ProjectName(プロジェクト名)を取得" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="450,161.33333333333334" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                                  <ueab:ReadCellValueX.SaveTo>
                                    <OutArgument x:TypeArguments="x:String">[ProjectName]</OutArgument>
                                  </ueab:ReadCellValueX.SaveTo>
                                </ueab:ReadCellValueX>
                                <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;勤務実績&quot;).Cell(&quot;E2&quot;)]" DisplayName="StartTime(開始時刻)を取得" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="450,161.33333333333334" sap2010:WorkflowViewState.IdRef="ReadCellValueX_4">
                                  <ueab:ReadCellValueX.SaveTo>
                                    <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
                                  </ueab:ReadCellValueX.SaveTo>
                                </ueab:ReadCellValueX>
                                <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;勤務実績&quot;).Cell(&quot;F2&quot;)]" DisplayName="EndTime(終了時刻)を取得" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="450,161.33333333333334" sap2010:WorkflowViewState.IdRef="ReadCellValueX_5">
                                  <ueab:ReadCellValueX.SaveTo>
                                    <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                                  </ueab:ReadCellValueX.SaveTo>
                                </ueab:ReadCellValueX>
                                <Sequence sap2010:Annotation.AnnotationText="エラー回避のため" DisplayName="時間が空であるとき、&quot;NULL&quot;取り入れる" sap:VirtualizedContainerService.HintSize="450,114" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[string.IsNullOrEmpty(StartTime) = true]" DisplayName="条件分岐 (if)" sap:VirtualizedContainerService.HintSize="388,53.333333333333336" sap2010:WorkflowViewState.IdRef="If_11">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="476,172" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_24">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[StartTime]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">NULL</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_44" />
                                    </If.Else>
                                  </If>
                                  <If Condition="[string.IsNullOrEmpty(EndTime) = true]" DisplayName="条件分岐 (if)" sap:VirtualizedContainerService.HintSize="388,53.333333333333336" sap2010:WorkflowViewState.IdRef="If_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="476,172" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="代入" sap:VirtualizedContainerService.HintSize="434,84.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_25">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[EndTime]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">NULL</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                    <If.Else>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_46" />
                                    </If.Else>
                                  </If>
                                </Sequence>
                                <ui:LogMessage DisplayName="メッセージをログ" sap:VirtualizedContainerService.HintSize="450,143.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[CurrentRow.ToString + &quot;-&quot; + DateName + WorkName + ProjectName + Category + StartTime.ToString + &quot;-&quot; + EndTime.ToString]" />
                              </Sequence>
                            </Sequence>
                          </Sequence>
                        </ActivityAction>
                      </ueab:ExcelForEachRowX.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ueab:ExcelForEachRowX>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <Sequence DisplayName="データテーブルの読込方法" sap:VirtualizedContainerService.HintSize="548.6666666666666,1658.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ueab:ReadRangeX DisplayName="範囲を読み込み" sap:VirtualizedContainerService.HintSize="486.6666666666667,171.33333333333334" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;勤務情報&quot;).Range(&quot;B6:F37&quot;)]" SaveTo="[DataTableWorkInfo]" />
                <ueab:ReadRangeX DisplayName="勤務時間読み込み" sap:VirtualizedContainerService.HintSize="486.6666666666667,171.33333333333334" sap2010:WorkflowViewState.IdRef="ReadRangeX_2" Range="[Excel.Sheet(&quot;勤務実績&quot;).Range(&quot;B1:F32&quot;)]" SaveTo="[DataTableDateList]" />
                <ui:JoinDataTables DataTable1="[DataTableWorkInfo]" DataTable2="[DataTableDateList]" DisplayName="データ テーブルを結合" sap:VirtualizedContainerService.HintSize="486.6666666666667,60" sap2010:WorkflowViewState.IdRef="JoinDataTables_1" JoinType="Left" OutputDataTable="[DataTableWorkList]">
                  <ui:JoinDataTables.Arguments>
                    <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                      <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                        <ui:JoinOperationArgument.Column1>
                          <InArgument x:TypeArguments="x:String">["日付"]</InArgument>
                        </ui:JoinOperationArgument.Column1>
                        <ui:JoinOperationArgument.Column2>
                          <InArgument x:TypeArguments="x:String">["日付"]</InArgument>
                        </ui:JoinOperationArgument.Column2>
                      </ui:JoinOperationArgument>
                    </scg:List>
                  </ui:JoinDataTables.Arguments>
                </ui:JoinDataTables>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DataTableWorkList]" DisplayName="繰り返し (データ テーブルの各行)" sap:VirtualizedContainerService.HintSize="486.6666666666667,741.3333333333334" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="376,552.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_52">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage sap2010:Annotation.AnnotationText="0:日付&#xA;1:件名&#xA;2:なし(結合しているから？)&#xA;3:カテゴリー&#xA;4:プロジェクト名&#xA;" DisplayName="メッセージをログ" sap:VirtualizedContainerService.HintSize="334,251.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[CurrentRow(0).ToString + &quot;/&quot; + CurrentRow(1).ToString + &quot;/&quot; + CurrentRow(2).ToString + &quot;/&quot; + CurrentRow(3).ToString + &quot;/&quot; + CurrentRow(4).ToString + &quot;/&quot; + CurrentRow(5).ToString + &quot;/&quot; + CurrentRow(6).ToString + &quot;/&quot; + CurrentRow(7).ToString + &quot;/&quot; + CurrentRow(8).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <ui:LogMessage sap2010:Annotation.AnnotationText="連想配列でも可能" DisplayName="メッセージをログ" sap:VirtualizedContainerService.HintSize="334,174" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[CurrentRow(&quot;日付&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;件名&quot;).ToString + &quot;/&quot; + CurrentRow(2).ToString + &quot;/&quot; + CurrentRow(&quot;カテゴリー&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;プロジェクト名&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;勤務種類&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;就業時間帯&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;出勤時刻&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;退勤時刻&quot;).ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                </ui:ForEachRow>
                <ui:CommentOut DisplayName="コメント アウト" sap:VirtualizedContainerService.HintSize="486.6666666666667,244" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="無視されるアクティビティ" sap:VirtualizedContainerService.HintSize="450,164" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[DataTableWorkInfo]" DisplayName="繰り返し (データ テーブルの各行)" sap:VirtualizedContainerService.HintSize="388,53.333333333333336" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="本文" sap:VirtualizedContainerService.HintSize="300,372.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_48">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage sap2010:Annotation.AnnotationText="0:日付&#xA;1:件名&#xA;2:なし(結合しているから？)&#xA;3:カテゴリー&#xA;4:プロジェクト名&#xA;" DisplayName="メッセージをログ" sap:VirtualizedContainerService.HintSize="258,161.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[CurrentRow(0).ToString + &quot;/&quot; + CurrentRow(1).ToString + &quot;/&quot; + CurrentRow(2).ToString + &quot;/&quot; + CurrentRow(3).ToString + &quot;/&quot; + CurrentRow(4).ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                              <ui:LogMessage sap2010:Annotation.AnnotationText="連想配列でも可能" DisplayName="メッセージをログ" sap:VirtualizedContainerService.HintSize="258,84" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[CurrentRow(&quot;日付&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;件名&quot;).ToString + &quot;/&quot; + CurrentRow(2).ToString + &quot;/&quot; + CurrentRow(&quot;カテゴリー&quot;).ToString + &quot;/&quot; + CurrentRow(&quot;プロジェクト名&quot;).ToString]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
              </Sequence>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelApplicationCard>
      <Sequence sap2010:Annotation.AnnotationText="WorkName が空でないとき&#xA;TEUR：作業実績確認を入力する&#xA;FALSE：その日の作業実績を入力しない" DisplayName="TKに入力する" sap:VirtualizedContainerService.HintSize="644.6666666666666,143.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_42">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Sequence>
    </ueab:SequenceX>
  </Sequence>
</Activity>